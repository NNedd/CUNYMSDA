x$conf.int
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)$conf.int
knn
mn+5
t.test(difference)$conf.int
sp <- (8-1)(15.34)^2+ (21-1)(18.23)^2
sp <- (8-1)*(15.34)^2+ (21-1)*(18.23)^2
ns <- (8-1)+(21-1)
sp <- sqrt(sp/ns)
(132.06 - 127.44) + c(-1,1)*(.975,ns)*sp*sqrt(1/8 + 1/21)
(132.06 - 127.44) + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8 + 1/21)
132.06 - 127.44 + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8 + 1/21)
(132.86 - 127.44) + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8 + 1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sqrt((var(g1)*9 + var(g2)*9)/18)
sqrt((9*var(g1)+9*var(g2))/18)
sp <- sqrt((var(g1)*9 + var(g2)*9)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num = (15.32/8 + 18.23/18)^2
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^4/8^2/7)+(18.23^4/18^2/17)
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86 - 127.44 + c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
library(swirl)
swirl()
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes(fit$residuals)
varRes <- var(fit$residuals)
varEst <- var(est)
varEst <- var(est(ols.slope,ols,ic))
dojdf
var (est())
est
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild, varRes+varEst)
efit <- lm(accel~mag+dist,attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
library(swirl)
swirl()
cor(gpa_nor,gch_nor)
l_nor <- lm(galton$child ~ galton$parent)
l_nor <- lm(gch_nor, gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
10/sqrt(100)
2
(32-30)/(10/sqrt(16))
15
qt(.95,15)
dim(fs)
t.test(fs$sheight - fs$fheight)
11.7885 * sd(fs$sheight - fs$fheight)/sqrt(1078)
mybin
8
pt(2.5,15,lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2, lower.tail=FALSE)
mybin
pbinom(6, size=8,prob=.5, lower.tail=FALSE)
pbinom(7,size=8,prop=.5,lower.tail=TRUE)
pbinom(7,size=8,prob=.5,lower.tail=TRUE)
ppois(9)
ppois(9,lambda = 5)
ppois(9,5,lower.tail=FALSE)
data("mtcars")
library(datasets)
?tt.test
?t.test
t.test(mtcars$mpg)
View(mtcars)
6/qt(.975,8)
1100 + qt(.975,8)*10
1100 - qt(.975,8)*10
(3-5) + qt(.975,9)*((0.60+0.68)/2)/sqrt(10)
(3-5) + qt(.975,9)*((0.60+0.68)/2)/sqrt(20)
(3-5) + qt(.975,19)*((0.60+0.68)/2)/sqrt(20)
pvariance <- (9*0.6*0.6 + 9*0.68*0.68)/(10+10-2)
(3-5) - qt(.975,18)*pvariance/sqrt(18)
(3-5) - qt(.975,18)*pvariance/sqrt(20)
(3-5) - qt(.975,16)*pvariance/sqrt(18)
(3-5) - (qt(0.975,18) * sqrt((0.6*0.6/10)+(0.68*0.68/10)))
(3-5) - qt(.975,18)*pvariance * (1/10+1/21)^.5
pvariance <- sqrt((9*0.6^2+9*0.68^2)/(10+10-2)
pvariance <- sqrt((9*0.6^2+9*0.68^2)/(10+10-2)
pvariance <- sqrt((9*0.6^2+9*0.68^2)/(10+10-2))
(3-5) + c(-1,1) *qt(.975,18)*pvariance * (1/10+1/10)^.5
8+21
?t.test
sp <- (8*1.5^2+8*1.8^2)/16
(-3-1) + c(-1,1)*qt(0.95,16)* sp * (1/sqrt(1/9+1/9))
(-3-1) + c(-1,1)*qt(0.95,16)* sp * (1/9+1/9)^.5
-4 + c(-1,1)*qt(0.95,16)* sp * (1/9+1/9)^.5
pvariance <- sqrt((9*0.6+9*0.68)/(10+10-2))
(3-5) + c(-1,1) *qt(.975,18)*pvariance * (1/10+1/10)^.5
sp <- sqrt((8*1.5^2+8*1.8^2)/16)
-4 + c(-1,1)*qt(0.95,16)* sp * (1/9+1/9)^.5
clr
clr()
n <- 40
nosim <-1000
hits(runif(1000))
hist(runif(1000))
mns = NULL
for (i in 1 :1000) mns = c(mns, mean(runif(40)))
hist(mns)
expdist <- NULL
for (i in 1:1000) expdist = c(expdist, mean(rexp(40, 0.2)))
theory_mean <- 1/0.2
theory_sd <- 1/0.2
mean(expdist)
sample_mean <- mean(expdist)
sample_var <- var(expdist)
hist(expdist)
1/sqrt(40)
1/sqrt(1000)
normdist <- NULL
for (i in 1:1000) normdist = c(normdist, mean(rnorm(10)))
mean(normdist)
sample_Var^2
sample_var^2
sqrt(5)
sample_var/1000
theory_sd^2
(theory_sd^2)/1000
5/sqrt(1000)
library(stringr)
library(XML)
library(maps)
install.packages("maps")
library(maps)
library(XML)
heritage_parsed <- htmlParse("worldheritagedanger.htm",encoding="UTF-8")
tables <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE)
# danger_table <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE, which = 2) # alternatively: directly select second table
library(rvest) # the new package, version 0.3.0
heritage_parsed <- read_html("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8") # read_html() from the rvest package is the new htmlParse() from the XML package
tables <- html_table(heritage_parsed, fill = TRUE) # html_table() from the rvest package, which replaces readHTMLTable() from the XML package
install.packages("rvest")
library(rvest) # the new package, version 0.3.0
heritage_parsed <- read_html("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8") # read_html() from the rvest package is the new htmlParse() from the XML package
tables <- html_table(heritage_parsed, fill = TRUE) # html_table() from the rvest package, which replaces readHTMLTable() from the XML package
# extract desired table
danger_table <- tables[[2]]
names(danger_table)
# select and rename columns
danger_table <- danger_table[,c(1,3,4,6,7)]
colnames(danger_table) <- c("name","locn","crit","yins","yend")
danger_table$name[1:3]
# cleanse criteria
danger_table$crit <- ifelse(str_detect(danger_table$crit, "Natural")==T, "nat", "cult")
# cleanse years
danger_table$yins <- as.numeric(danger_table$yins)
danger_table$yend
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$"))
danger_table$yend <- as.numeric(yend_clean)
danger_table$locn[c(1,3,5)]
yend_clean <- unlist(str_extract_all(danger_table$yend, "\d{4}$"))
danger_table$yend <- as.numeric(yend_clean)
danger_table$locn[c(1,3,5)]
yend_clean <- unlist(str_extract_all(danger_table$yend, "\d{4}$"))
danger_table$yend <- as.numeric(yend_clean)
danger_table$locn[c(1,3,5)]
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}$"))
danger_table$yend <- as.numeric(yend_clean)
View(danger_table)
danger_table$yend
?unlist
str_extract_all(danger_table$yend, "\\d{4}$")
yend_clean <- str_extract_all(danger_table$yend, "\\d{4}$")
unlist(str_extract_all(danger_table$yend, "\\d{4}$"))
unlist(str_extract_all(danger_table$yend, "\\d{4}"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}"))
danger_table$yend <- as.numeric(yend_clean)
View(danger_table)
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}$*"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$*"))
yend_clean <- unlist(str_extract_all(danger_table$yend, ".*(\\d+{4}).*$", "\\1"))
yend_clean <- unlist(str_extract_all(danger_table$yend, ".*(\\d+{4}.*$", "\\1"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "*(\\d+{4}*$),\\1"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]$*"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}*"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$*"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
View(danger_table)
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[\\d]*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}$*"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}*"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[\\d]*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]?$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]^$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[*\\d]*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[?\\d]*$"))
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
yend_clean <- unlist(str_extract_all(yend_clean, "\\d{4}))
yend_clean <- str_extract_all(yend_clean, "\\d{4})
yend_clean <- str_extract_all(yend_clean, "[[:digit:]]{4})
""
yend_clean <- str_extract_all(yend_clean, "[[:digit:]]{4}")
yend_clean <- unlist(str_extract_all(yend_clean, "[[:digit:]]{4}"))
yend_clean[19]
yend_clean[20]
danger_table$yend <- as.numeric(yend_clean)
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
danger_table$yins <- as.numeric(danger_table$yins)
danger_table$yend
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
danger_table$yend <- as.numeric(yend_clean)
danger_table$locn[c(1,3,5)]
library(rvest) # the new package, version 0.3.0
heritage_parsed <- read_html("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8") # read_html() from the rvest package is the new htmlParse() from the XML package
tables <- html_table(heritage_parsed, fill = TRUE) # html_table() from the rvest package, which replaces readHTMLTable() from the XML package
# extract desired table
danger_table <- tables[[2]]
names(danger_table)
# select and rename columns
danger_table <- danger_table[,c(1,3,4,6,7)]
colnames(danger_table) <- c("name","locn","crit","yins","yend")
danger_table$name[1:3]
# cleanse criteria
danger_table$crit <- ifelse(str_detect(danger_table$crit, "Natural")==T, "nat", "cult")
# cleanse years
danger_table$yins <- as.numeric(danger_table$yins)
danger_table$yend
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
danger_table$yend <- as.numeric(yend_clean)
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
yend_clean <- unlist(str_extract_all(yend_clean, "[[:digit:]]{4}"))
danger_table$yend <- as.numeric(yend_clean)
View(danger_table)
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
library(rvest) # the new package, version 0.3.0
heritage_parsed <- read_html("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8") # read_html() from the rvest package is the new htmlParse() from the XML package
tables <- html_table(heritage_parsed, fill = TRUE) # html_table() from the rvest package, which replaces readHTMLTable() from the XML package
# extract desired table
danger_table <- tables[[2]]
names(danger_table)
# select and rename columns
danger_table <- danger_table[,c(1,3,4,6,7)]
colnames(danger_table) <- c("name","locn","crit","yins","yend")
danger_table$name[1:3]
# cleanse criteria
danger_table$crit <- ifelse(str_detect(danger_table$crit, "Natural")==T, "nat", "cult")
# cleanse years
danger_table$yins <- as.numeric(danger_table$yins)
danger_table$yend
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
yend_clean <- unlist(str_extract_all(yend_clean, "[[:digit:]]{4}"))
yend_clean
danger_table$yend <- as.numeric(yend_clean)
View(danger_table)
### --------------------------------------------------------------
### AUTOMATED DATA COLLECTION WITH R
### SIMON MUNZERT, CHRISTIAN RUBBA, PETER MEISSNER, DOMINIC NYHUIS
###
### CODE CHAPTER 1: INTRODUCTION
### --------------------------------------------------------------
# load packages
library(stringr)
library(XML)
library(maps)
### 1.1. Case Study: World Heritage Sites in Danger
### --------------------------------------------------------------
# parsing from Wikipedia web site
# heritage_parsed <- htmlParse("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
# parsing from locally stored HTML file
heritage_parsed <- htmlParse("worldheritagedanger.htm",encoding="UTF-8")
tables <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE)
# danger_table <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE, which = 2) # alternatively: directly select second table
# extract desired table
danger_table <- tables[[2]]
names(danger_table)
# select and rename columns
danger_table <- danger_table[,c(1,3,4,6,7)]
colnames(danger_table) <- c("name","locn","crit","yins","yend")
danger_table$name[1:3]
# cleanse criteria
danger_table$crit <- ifelse(str_detect(danger_table$crit, "Natural")==T, "nat", "cult")
# cleanse years
danger_table$yins <- as.numeric(danger_table$yins)
danger_table$yend
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
yend_clean <- unlist(str_extract_all(yend_clean, "[[:digit:]]{4}"))
danger_table$yend <- as.numeric(yend_clean)
danger_table$yend[1:3]
danger_table$locn[c(1,3,5)]
reg_y <- "[/][-1]*[[:digit:]]*[.]*[[:digit:]]*[;]"
reg_x <- "[;][-1]*[[:digit:]]*[.]*[[:digit:]]*"
y_coords <- str_extract(danger_table$locn, reg_y)
reg_y <- "[/][ -]*[[:digit:]]*[.]*[[:digit:]]*[;]"
reg_x <- "[;][ -]*[[:digit:]]*[.]*[[:digit:]]*"
y_coords <- str_extract(danger_table$locn, reg_y)
y_coords <- as.numeric(str_sub(y_coords, 3, -2))
reg_y <- "[/][ -]*[[:digit:]]*[.]*[[:digit:]]*[;]"
reg_x <- "[;][ -]*[[:digit:]]*[.]*[[:digit:]]*"
y_coords <- str_extract(danger_table$locn, reg_y)
y_coords <- as.numeric(str_sub(y_coords, 3, -2))
danger_table$y_coords <- y_coords
x_coords <- str_extract(danger_table$locn, reg_x)
x_coords <- as.numeric(str_sub(x_coords, 3, -1))
danger_table$x_coords <- x_coords
danger_table$locn <- NULL
round(danger_table$y_coords, 2)[1:3]
round(danger_table$y_coords, 2)[1:3]
round(danger_table$x_coords, 2)]1:3]
round(danger_table$y_coords, 2)[1:3]
round(danger_table$x_coords, 2)[1:3]
dim(danger_table)
head(danger_table)
par(oma=c(0,0,0,0))
par(mar=c(0,0,0,0))
pch <- ifelse(danger_table$crit == "nat", 19, 2)
map("world", col = "darkgrey", lwd = 0.5, mar = c(0.1,0.1,0.1,0.1))
points(danger_table$x_coords, danger_table$y_coords, pch = pch, col = "black", cex = .8)
box()
table(danger_table$crit)
# cleanse criteria
danger_table$crit <- ifelse(str_detect(danger_table$crit, "Natural")==TRUE, "nat", "cult")
danger_table$crit[1:3]
View(danger_table)
### --------------------------------------------------------------
### AUTOMATED DATA COLLECTION WITH R
### SIMON MUNZERT, CHRISTIAN RUBBA, PETER MEISSNER, DOMINIC NYHUIS
###
### CODE CHAPTER 1: INTRODUCTION
### --------------------------------------------------------------
# load packages
library(stringr)
library(XML)
library(maps)
### 1.1. Case Study: World Heritage Sites in Danger
### --------------------------------------------------------------
# parsing from Wikipedia web site
# heritage_parsed <- htmlParse("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
# parsing from locally stored HTML file
#heritage_parsed <- htmlParse("worldheritagedanger.htm",encoding="UTF-8")
#tables <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE)
# danger_table <- readHTMLTable(heritage_parsed, stringsAsFactors = FALSE, which = 2) # alternatively: directly select second table
#The next three lines of code are from the errata
library(rvest) # the new package, version 0.3.0
# read_html() from the rvest package is the new htmlParse() from the XML package
heritage_parsed <- read_html("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
# html_table() from the rvest package, which replaces readHTMLTable() from the XML package
tables <- html_table(heritage_parsed, fill = TRUE)
# extract desired table
danger_table <- tables[[2]]
names(danger_table)
# select and rename columns
danger_table <- danger_table[,c(1,3,4,6,7)]
colnames(danger_table) <- c("name","locn","crit","yins","yend")
danger_table$name[1:3]
# cleanse criteria
danger_table$crit <- ifelse(str_detect(danger_table$crit, "Natural")==TRUE, "nat", "cult")
danger_table$crit[1:3]
# cleanse years
danger_table$yins <- as.numeric(danger_table$yins)
danger_table$yend
yend_clean <- unlist(str_extract_all(danger_table$yend, "\\d{4}[^\\d]*$"))
yend_clean <- unlist(str_extract_all(yend_clean, "[[:digit:]]{4}"))
danger_table$yend <- as.numeric(yend_clean)
danger_table$yend[1:3]
#location variables
danger_table$locn[c(1,3,5)]
reg_y <- "[/][ -]*[[:digit:]]*[.]*[[:digit:]]*[;]"
reg_x <- "[;][ -]*[[:digit:]]*[.]*[[:digit:]]*"
y_coords <- str_extract(danger_table$locn, reg_y)
y_coords <- as.numeric(str_sub(y_coords, 3, -2))
danger_table$y_coords <- y_coords
x_coords <- str_extract(danger_table$locn, reg_x)
x_coords <- as.numeric(str_sub(x_coords, 3, -1))
danger_table$x_coords <- x_coords
danger_table$locn <- NULL
round(danger_table$y_coords, 2)[1:3]
round(danger_table$x_coords, 2)[1:3]
dim(danger_table)
head(danger_table)
# plot endangered heritage sites
#pdf(file="heritage-map.pdf", height=3.3, width=7, family="URWTimes")
par(oma=c(0,0,0,0))
par(mar=c(0,0,0,0))
pch <- ifelse(danger_table$crit == "nat", 19, 2)
map("world", col = "darkgrey", lwd = 0.5, mar = c(0.1,0.1,0.1,0.1))
points(danger_table$x_coords, danger_table$y_coords, pch = pch, col = "black", cex = .8)
box()
table(danger_table$crit)
# plot year of endangerment
#pdf(file="heritage-hist1.pdf", height=3.3, width=7, family="URWTimes")
par(oma=c(0,0,0,0))
par(mar=c(4,4,1,.5))
hist(danger_table$yend, freq=TRUE, xlab="Year when site was put on the list of endangered sites", main="")
box()
#dev.off()
# plot year of endangerment
#pdf(file="heritage-hist1.pdf", height=3.3, width=7, family="URWTimes")
par(oma=c(0,0,0,0))
par(mar=c(4,4,1,.5))
hist(danger_table$yend, freq=TRUE, xlab="Year when site was put on the list of endangered sites", main="")
box()
#dev.off()
# plot time between inscription and endangerment
duration <- danger_table$yend - danger_table$yins
#pdf(file="heritage-hist2.pdf", height=3.3, width=7, family="URWTimes")
par(oma=c(0,0,0,0))
par(mar=c(4,4,1,.5))
hist(duration, freq=TRUE, xlab="Years it took to become an endangered site", main="")
box()
#dev.off()
View(danger_table)
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown','shiny'))
devtools::install_github("jbryer/DATA606")
library(DATA606)
startLab('Lab0')
source("more/arbuthnot.R")
arbuthnot
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
arbuthnot$girls
plot(x = arbuthnot$year, y = arbuthnot$girls)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l")
?plot
5218 + 4683
arbuthnot$boys + arbuthnot$girls
plot(arbuthnot$year, arbuthnot$boys + arbuthnot$girls, type = "l")
5218 / 4683
arbuthnot$boys / arbuthnot$girls
5218 / (5218 + 4683)
arbuthnot$boys / (arbuthnot$boys + arbuthnot$girls)
plot(arbuthnot$year, arbuthnot$boys / (arbuthnot$boys + arbuthnot$girls), type = "l")
arbuthnot$boys > arbuthnot$girls
source("more/present.R")
present
present
min(present$year)
max(present$year)
present
lower <- min(present$year)
upper <- max(present$year)
present$boys
present$girls
plot(arbuthnot$year, present$boys / present$girls), type = "l")
plot(arbuthnot$year, (present$boys / present$girls), type = "l")
plot(present$year, (present$boys / present$girls), type = "l")
present$boys / present$girls
present$boys > present$girls
dim(present)
names(present)
maxpresent <- which.max(present$boys+present$girls)
maxpresent <- present$year[which.max(present$boys+present$girls)]
source("more/arbuthnot.R")
arbuthnot
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
arbuthnot$girls
plot(x = arbuthnot$year, y = arbuthnot$girls)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l")
?plot
5218 + 4683
arbuthnot$boys + arbuthnot$girls
plot(arbuthnot$year, arbuthnot$boys + arbuthnot$girls, type = "l")
5218 / 4683
arbuthnot$boys / arbuthnot$girls
5218 / (5218 + 4683)
arbuthnot$boys / (arbuthnot$boys + arbuthnot$girls)
plot(arbuthnot$year, arbuthnot$boys / (arbuthnot$boys + arbuthnot$girls), type = "l")
arbuthnot$boys > arbuthnot$girls
source("more/present.R")
present
lower <- min(present$year)
upper <- max(present$year)
dim(present)
names(present)
present$boys
present$girls
present$boys / present$girls
plot(present$year, (present$boys / present$girls), type = "l")
present$boys > present$girls
maxpresent <- present$year[which.max(present$boys+present$girls)]
setwd("~/CUNY MSDA/MSDA Github repository/Data606/Homework 1")
