#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
str_detect(name, "[A-Z]\\.")
str_detect(name, "\\, [A-Za-z]+$")
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
str_detect(name, "[A-Z]\\.")
str_detect(name, "\\,")
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
str_detect(name, "[A-Z]\\.")
str_detect(name, "\\, [A-Za-z]+$")
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
str_detect(name, "[A-Z]\\.")
str_detect(name, "\\, [A-Za-z]+$")
str_detect(name, "\\b[[:alpha:]]+ \\b")
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
name2 <- name
str_detect(name, "[A-Z]\\.")
str_detect(name, "\\, [A-Za-z]+$")
str_detect(name, "\\b[[:alpha:]]+ \\b")
for (item in name2)
{
if (str_detect(item, "[A-Z]\\.")){name2[item] <- str_extract(item, "[A-Z]\\.")}
}
name2
name2 <- name
for (index in 1:length(name2))
{
if (str_detect(name2[i], "[A-Z]\\.")){name2[i] <- str_extract(name2[i], "[A-Z]\\.")}
}
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
name2 <- name
for (index in 1:length(name2))
{
if (str_detect(name2[index], "[A-Z]\\.")){name2[index] <- str_extract(name2[index], "[A-Z]\\.")}
}
name2
str_detect(name, "\\, [A-Za-z]+$")
str_detect(name, "\\b[[:alpha:]]+ \\b")
name2 <- name
for (index in 1:length(name2))
{
if (str_detect(name2[index], "[A-Z]\\.")){name2[index] <- str_extract(name2[index], "[A-Z]\\.")}
if(str_detect(name2[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name2[index], "[A-Za-z]+$")}
}
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
name2 <- name
for (index in 1:length(name2))
{
if (str_detect(name2[index], "[A-Z]\\.")){name2[index] <- str_extract(name2[index], "[A-Z]\\.")}
if(str_detect(name2[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name2[index], "[A-Za-z]+$")}
}
name2
str_detect(name, "\\b[[:alpha:]]+ \\b")
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
name2 <- name
for (index in 1:length(name2))
{
if (str_detect(name2[index], "[A-Z]\\.")){name2[index] <- str_extract(name2[index], "[A-Z]\\.")}
if(str_detect(name2[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name2[index], "[A-Za-z]+$")}
if(str_detect(name2[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name2[index],"\\b[[:alpha:]]+")}
}
name2
#unlist(str_extract_all(name, "(\\b[[:alpha:]]+ \\b)"))
#unlist(str_extract_all(name, "[[:alpha]]?\\. [[:alpha:]]+\\b"))
name2 <- name
for (index in 1:length(name2))
{
if (str_detect(name2[index], "[A-Z]\\.")){name2[index] <- str_extract(name2[index], "[A-Z]\\.")}
if(str_detect(name2[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name2[index], "[A-Za-z]+$")}
if(str_detect(name2[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name2[index],"\\b[[:alpha:]]+ ")}
}
name2
name2 <- name
#First names
for (index in 1:length(name2))
{
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
name2
name2 <- str_trim(name2)
name2 <- name
#First names
for (index in 1:length(name2))
{
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
name2
name2 <- str_trim(name2)
name2 <- str_pad(name2, width = 1, side = "right", pad = " ")
name2 <- name
#First names
for (index in 1:length(name2))
{
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
name2
name2 <- str_trim(name2)
name2 <- str_pad(name2, width = 1, side = "right", pad = " ")
name2
name2 <- name
#First names
for (index in 1:length(name2))
{
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
name2
name2 <- str_trim(name2)
name2 <- str_pad(name2, side = "right", pad = " ")
?str_pad
name2 <- name
#First names
for (index in 1:length(name2))
{
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
name2
name2 <- str_trim(name2)
name2 <- str_pad(name2, width = 0, side = "right", pad = " ")
name2
str_detect(name,"^\\b[[:alpha:]]+\\,")
str_extract(name, "^\\w")
str_extract(name, "^\\b[[:alpha:]]+\\b")
str_extract(name,  "[A-Za-z]+$")
name3 <- name
for (index in 1:length(name3))
{
if (str_detect(name[index], "^\\b[[:alpha:]]+\\,")){name3[index] <- str_extract(name[index], "^\\b[[:alpha:]]+\\b")}
else{name3[index] <- str_extract(name[index], "[A-Za-z]+$")}
}
name3
str_c(name2, name3, sep = " ")
name2 <- name
#First names
for (index in 1:length(name2))
{
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
name2 <- str_trim(name2)
#Last Names
name3 <- name
for (index in 1:length(name3))
{
if (str_detect(name[index], "^\\b[[:alpha:]]+\\,"))
{name3[index] <- str_extract(name[index], "^\\b[[:alpha:]]+\\b")}
else
{name3[index] <- str_extract(name[index], "[A-Za-z]+$")}
}
#Combine first and last names
rearranged_name <- str_c(name2, name3, sep = " ")
rearranged_name
str_detect(name, "\\w{2,}\\.")
has_title <- str_detect(name, "\\w{2,}\\.")
has_title
str_detect(name, "\\s")
str_count(name, "\\s")
for (index in 1:length(name))
{
if ((str_count(name[index], "\\s")) = 1)
for (index in 1:length(name))
{
if ((str_count(name[index], "\\s")) == 1)
{
name4[index] <- FALSE
}
else if  (str_detect(name[index], "\\w{2,}\\."))
{
name4[index] <- FALSE
}
else
name4[index] <- TRUE
}
name4 <- name
for (index in 1:length(name))
{
if ((str_count(name[index], "\\s")) == 1)
{
name4[index] <- FALSE
}
else if  (str_detect(name[index], "\\w{2,}\\."))
{
name4[index] <- FALSE
}
else
name4[index] <- TRUE
}
name4 <- name
for (index in 1:length(name))
{
if ((str_count(name[index], "\\s")) == 1)
{
name4[index] <- FALSE
}
else if  (str_detect(name[index], "\\w{2,}\\."))
{
name4[index] <- FALSE
}
else
name4[index] <- TRUE
}
name4 <- as.logical(name4)
name4 <- name
for (index in 1:length(name))
{
if ((str_count(name[index], "\\s")) == 1)
{
name4[index] <- FALSE
}
else if  (str_detect(name[index], "\\w{2,}\\."))
{
name4[index] <- FALSE
}
else
name4[index] <- TRUE
}
name4 <- as.logical(name4)
name4
str_extract_all("dgag699393$", "[0-9]+\\$")
str_extract_all("309834$dgag699393$", "[0-9]+\\$")
unlist(str_extract_all("309834$dgag699393$", "[0-9]+\\$"))
unlist(str_extract_all("309834$ dgag 699393 $", "[0-9]+\\$"))
unlist(str_extract_all("675 837$ 309834$ dgag 699393 $", "[0-9]+\\$"))
unlist(str_extract_all("675 837$ 30,9834$ dgag 699393 $", "[0-9]+\\$"))
unlist(str_extract_all("675 837$ 30,9834$ dgag 699393 $", "[0-9]+\\$"))
str_extract("592$", "[0-9]+\\$")
unlist(str_extract_all("Mary had a little lamb, his fleece was white as snow.","\\b[a-z]{1,4}\\b" ))
unlist(str_extract_all("Mary had a little lamb, his fleece was white as snow.","\\b[a-z]{1,4}\\b" ))
str_extract("a cat in a hat", "\\b[a-z]{1,4}\\b")
unlist(str_extract_all("Mary had a little lamb, his fleece was white as snow.","\\b[a-z]{1,4}\\b" ))
str_extract_all("a cat in a hat", "\\b[a-z]{1,4}\\b")
unlist(str_extract_all("Mary had a little lamb, his fleece was white as snow.","\\b[a-z]{1,4}\\b" ))
unlist(str_extract_all("a cat in a hat", "\\b[a-z]{1,4}\\b"))
unlist(str_extract_all("Mary had a little lamb, his fleece was white as snow.","\\b[a-z]{1,4}\\b" ))
unlist(str_extract_all("a cat in a hat", "\\b[a-z]{1,4}\\b"))
unlist(str_extract_all("marvel.txt", ".*?\\.txt$"))
unlist(str_extract_all(".txt", ".*?\\.txt$"))
unlist(str_extract_all("&*.txt", ".*?\\.txt$"))
unlist(str_extract_all("txt", ".*?\\.txt$"))
unlist(str_extract_all("marvel.txt, fellow.txt, my.exe", ".*?\\.txt$"))
unlist(str_extract_all("marvel.txt, fellow.txt", ".*?\\.txt$"))
unlist(str_extract_all("marvel.txtuhfellow.txt", ".*?\\.txt$"))
unlist(str_extract_all("marvel.txt", ".*?\\.txt$"))
unlist(str_extract_all("marveltxt", ".*?\\.txt$"))
unlist(str_extract_all("marveltxt", ".*?\\.txt$"))
unlist(str_extract_all("marvel.txt", ".*?\\.txt$"))
unlist(str_extract_all("19/02/2017", "\\d{2}/\\d{2}/\\d{4}"))
unlist(str_extract_all("The date is 19/02/2017", "\\d{2}/\\d{2}/\\d{4}"))
unlist(str_extract_all("<m>eite</<<<eihte", "<(.+?)>.+?</\\1>"))
unlist(str_extract_all("<", "<"))
unlist(str_extract_all("<dfds", "<(.+?)"))
unlist(str_extract_all("<dfds", "<(.+?).+?"))
unlist(str_extract_all("<df<ds", "<(.+?).+?<"))
unlist(str_extract_all("<df</ds", "<(.+?).+?</"))
unlist(str_extract_all("<df</ds", "<(.+?).+?</\\1"))
unlist(str_extract_all("<df</d>s", "<(.+?).+?</\\1"))
unlist(str_extract_all("<df</d>s", "<(.+?).+?</\\1>"))
unlist(str_extract_all("<p>F</p>", "<(.+?)>.+?</\\1>"))
unlist(str_extract_all("<p>This is a test</p>", "<(.+?)>.+?</\\1>"))
unlist(str_extract_all("<H1>This is a test</H1>", "<(.+?)>.+?</\\1>"))
unlist(str_extract_all("<H1>DATA 607 is fun!</H1>", "<(.+?)>.+?</\\1>"))
unlist(str_extract_all("<H1>DATA 607 is fun!</dr>", "<(.+?)>.+?</\\1>"))
unlist(str_extract_all("<H1>DATA 607 is fun!</H1>", "<(.+?)>.+?</\\1>"))
unlist(str_extract_all("<H1>DATA 607 is fun!</H1>", "<(.+?)>.+?</\\1>"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(secret, "[A-Z]+"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
(str_extract_all(secret, "[A-Z]+"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(secret, "[A-Z]+|\\."))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(secret, "[A-Z]+|[[:punct:]]"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(secret, "[A-Z]+.|[[:punct:]]"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
message <- cat(str_c(message), collapse = "")
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
message <- cat(str_c(message))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
message_clean <- cat(str_c(message))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
cat(str_c(message))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
str_replace(cat(str_c(message)), pattern = ".", replacement = " ")
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
cat(str_c(message))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
test <- cat(str_c(message))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
test <- cat(str_c(message), collapse = " ")
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
test <- cat(str_c(message), collapse = ".")
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
test <- cat(str_c(message, collapse = ""))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
test <- cat(str_c(message, collapse = "."))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
test <- cat(str_c(message, collapse = " "))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
test <- cat(str_c(message, collapse = ""))
str_extract(name[index], "[A-Z]\\."
str_extract(name[index], "[A-Z]\\.")
str_extract(name, "[A-Z]\\.")
unlist(str_extract_all("The due date for this assignment date is 19/02/2017", "\\d{2}/\\d{2}/\\d{4}"))
raw.data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
raw.data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
name
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
raw_data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw_data, "[[:alpha:]., ]{2,}"))
name
raw_data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw_data, "[[:alpha:]., ]{2,}"))
name
raw_data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw_data, "[[:alpha:]., ]{2,}"))
name
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
raw_data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw_data, "[[:alpha:]., ]{2,}"))
name
name2 <- name
#First names
for (index in 1:length(name2))
{
#Search and extract abbreviated first names
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
#Search for and extract where the where first name is written last as in Simpson, Homer
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
#Search for and extract where first name is written first.
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
#Remove spaces in firstname
name2 <- str_trim(name2)
#Last Names
name3 <- name
for (index in 1:length(name3))
{
#Extract those last names that are written first.
if (str_detect(name[index], "^\\b[[:alpha:]]+\\,"))
{name3[index] <- str_extract(name[index], "^\\b[[:alpha:]]+\\b")}
else
#Extract those last names that are written as the last word
{name3[index] <- str_extract(name[index], "[A-Za-z]+$")}
}
#Combine first and last names separated by space
rearranged_name <- str_c(name2, name3, sep = " ")
rearranged_name
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
raw_data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw_data, "[[:alpha:]., ]{2,}"))
name
name2 <- name
#First names
for (index in 1:length(name2))
{
#Search and extract abbreviated first names
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
#Search for and extract where the where first name is written last as in Simpson, Homer
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
#Search for and extract where first name is written first.
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
#Remove spaces in firstname
name2 <- str_trim(name2)
#Last Names
name3 <- name
for (index in 1:length(name3))
{
#Extract those last names that are written first.
if (str_detect(name[index], "^\\b[[:alpha:]]+\\,"))
{name3[index] <- str_extract(name[index], "^\\b[[:alpha:]]+\\b")}
else
#Extract those last names that are written as the last word
{name3[index] <- str_extract(name[index], "[A-Za-z]+$")}
}
#Combine first and last names separated by space
rearranged_name <- str_c(name2, name3, sep = " ")
rearranged_name
has_title <- str_detect(name, "\\w{2,}\\.")
has_title
name4 <- name
for (index in 1:length(name))
{
#Eliminate those names with only one space - indicates only first and last name.
if ((str_count(name[index], "\\s")) == 1)
{
name4[index] <- FALSE
}
#Eliminate those names with Titles (which is not a second name)
else if  (str_detect(name[index], "\\w{2,}\\."))
{
name4[index] <- FALSE
}
#Anything left is considered to have a second name
else
name4[index] <- TRUE
}
name4 <- as.logical(name4)
name4
unlist(str_extract_all("675 837$ 30,9834$ dgag 699393 $", "[0-9]+\\$"))
str_extract("592$", "[0-9]+\\$")
unlist(str_extract_all("Mary had a little lamb, his fleece was white as snow.","\\b[a-z]{1,4}\\b" ))
#The words fleece, little and white all have more than 4 letters, while Mary has a capital letter
unlist(str_extract_all("a cat in a hat", "\\b[a-z]{1,4}\\b"))
unlist(str_extract_all("marveltxt", ".*?\\.txt$"))
unlist(str_extract_all("marvel.txt", ".*?\\.txt$"))
unlist(str_extract_all("The due date for this assignment date is 19/02/2017", "\\d{2}/\\d{2}/\\d{4}"))
unlist(str_extract_all("<H1>DATA 607 is fun!</H1>", "<(.+?)>.+?</\\1>"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
cat(str_c(message, collapse = ""))
unlink('Assignment3_cache', recursive = TRUE)
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
raw_data <- raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw_data, "[[:alpha:]., ]{2,}"))
name2 <- name
#First names
for (index in 1:length(name2))
{
#Search and extract abbreviated first names
if (str_detect(name[index], "[A-Z]\\.")){name2[index] <- str_extract(name[index], "[A-Z]\\.")}
#Search for and extract where the where first name is written last as in Simpson, Homer
if(str_detect(name[index], "\\, [A-Za-z]+$")){name2[index] <- str_extract(name[index], "[A-Za-z]+$")}
#Search for and extract where first name is written first.
if(str_detect(name[index], "\\b[[:alpha:]]+ \\b")){name2[index] <- str_extract(name[index],"\\b[[:alpha:]]+ ")}
}
#Remove spaces in firstname
name2 <- str_trim(name2)
#Last Names
name3 <- name
for (index in 1:length(name3))
{
#Extract those last names that are written first.
if (str_detect(name[index], "^\\b[[:alpha:]]+\\,"))
{name3[index] <- str_extract(name[index], "^\\b[[:alpha:]]+\\b")}
else
#Extract those last names that are written as the last word
{name3[index] <- str_extract(name[index], "[A-Za-z]+$")}
}
#Combine first and last names separated by space
rearranged_name <- str_c(name2, name3, sep = " ")
rearranged_name
has_title <- str_detect(name, "\\w{2,}\\.")
has_title
name4 <- name
for (index in 1:length(name))
{
#Eliminate those names with only one space - indicates only first and last name.
if ((str_count(name[index], "\\s")) == 1)
{
name4[index] <- FALSE
}
#Eliminate those names with Titles (which is not a second name)
else if  (str_detect(name[index], "\\w{2,}\\."))
{
name4[index] <- FALSE
}
#Anything left is considered to have a second name
else
name4[index] <- TRUE
}
name4 <- as.logical(name4)
name4
unlist(str_extract_all("675 837$ 30,9834$ dgag 699393 $", "[0-9]+\\$"))
str_extract("592$", "[0-9]+\\$")
unlist(str_extract_all("Mary had a little lamb, his fleece was white as snow.","\\b[a-z]{1,4}\\b" ))
#The words fleece, little and white all have more than 4 letters, while Mary has a capital letter
unlist(str_extract_all("a cat in a hat", "\\b[a-z]{1,4}\\b"))
unlist(str_extract_all("marveltxt", ".*?\\.txt$"))
unlist(str_extract_all("marvel.txt", ".*?\\.txt$"))
unlist(str_extract_all("The due date for this assignment date is 19/02/2017", "\\d{2}/\\d{2}/\\d{4}"))
unlist(str_extract_all("<H1>DATA 607 is fun!</H1>", "<(.+?)>.+?</\\1>"))
secret <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
message <- unlist(str_extract_all(secret, "[A-Z]|[[:punct:]]"))
cat(str_c(message, collapse = ""))
name
